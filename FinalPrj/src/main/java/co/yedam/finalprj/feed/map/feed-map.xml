<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.yedam.finalprj.feed.map.FeedMap">

	<!-- 일반회원 글만, 탈퇴한 회원, 정지당한 회원 글 보이지 않음 , 블락한 회원의 글 제외 -->
	<select id="feedSelectList"
		parameterType="co.yedam.finalprj.feed.vo.FeedVO" resultType="map">
		SELECT *
	    FROM (SELECT
	    				<![CDATA[CASE WHEN #{user_id} <> U.USER_ID THEN TRUNC(CAL(#{user_id} ,U.USER_ID),0)
	    				ELSE 0 END ]]>,
						u.USER_ID 	"user_id",
						u.EMAIL 	"email",
						u.NAME 		"name",
						u.STATUS 	"status",
						u.LAT 		"lat",
						u.LON 		"lon",
						u.TIMEZONE 	"time_zone",
						f.FEED_ID 	"feed_id",
						f.CONTENT 	"content",
						f.PHOTO 	"fphoto",
						f.REG_DATE 	"reg_date",
						f.TAGS 		"tags",
						f.WRITE_LAN "write_lan",
						d.ORIGINAL_NAME, 
	      				d.UUID 		"uuid",
	        			d.DIRECTORY,
	        			p.DELETE_YN "delete_yn",
	        			nvl(likeCnt.LIKECNT,0) "like_cnt",
	        			F_COMMENT_CNT(f.feed_id) "cmt",
	        			mainlike.LIKERS "likers",
            			mainlike.LIKERSUUID "likersuuid",
            			userPhoto.uuid "photo"
			  FROM 		feed f JOIN users u
						ON f.USER_ID = u.USER_ID
	        			left outer join photo p
	        			on  f.PHOTO = p.PHOTO_ID
	        			left outer join photo_detail d
	       				on p.PHOTO_ID=  d.PHOTO_ID
	       				left outer join feedLikeCnt_v likeCnt
                		on f.FEED_ID = likeCnt.FEED_ID
                	    left outer join mainFeedlike_v mainlike
                		on mainlike.feed_id = f.feed_id
                		left outer join userPhoto_v userPhoto
                		on userPhoto.USER_ID = u.user_id
			  WHERE  	u.STATUS = '일반회원'
					    AND NOT   f.USER_ID IN (  SELECT BLOCKED
									          	  FROM block
										    	  WHERE USER_ID = #{user_id}
										        )
			<if test="tags != null">
			AND tags like '%' || #{tags} || '%'
	  	    </if>
	  	    <if test="write_lan != null">
			AND write_lan = #{write_lan}
	  	    </if>
	  	    <if test="location != null">
			AND 1 BETWEEN 0 AND 2000
	  	    </if>
	  	    <if test="feed_id != null">
			AND f.feed_id = #{feed_id}
	  	    </if>
			ORDER BY f.REG_DATE DESC)
	</select>

	<!--오늘 생일인 친구 조회 , 블릭한 친구 제외-->
	<select id="birthUser" parameterType="co.yedam.finalprj.users.vo.UsersVO" resultType="co.yedam.finalprj.users.vo.UsersVO">
		SELECT 
			    u.user_id, 
			    u.NAME,
			    TO_CHAR(sysdate,'YYYY') - TO_CHAR(u.BIRTH,'YYYY') as "cnt"
		FROM    
				friends f , users u
		WHERE   
				f.FOLLOWING = u.USER_ID
				AND    TO_CHAR(u.BIRTH,'MM/DD') = TO_CHAR(sysdate,'MM/DD')
				AND    f.user_id = #{user_id}
				AND    u.STATUS = '일반회원'
				AND    not f.FOLLOWING in ( SELECT BLOCKED
										    FROM block
										    WHERE USER_ID = #{user_id}
										   )
	</select>
	
	<!-- 나와 상대방의 일치하는 관심사 수 , 블락친구 제외, 이미 친구인 유저 제외 -->
	<select id="sameTopicList" parameterType="co.yedam.finalprj.users.vo.UsersVO" resultType="co.yedam.finalprj.users.vo.UsersVO">
		SELECT 
				topic_cnt(#{topic},topic) as "topicCnt" , 
				user_id, name
		FROM 	
				users
		WHERE 	not user_id IN (#{user_id})
				AND NOT user_id IN (  SELECT blocked
				                      FROM block
				                      WHERE user_id = #{user_id}
				                    )
				AND NOT user_id IN ( SELECT FOLLOWING
				                     FROM friends
				                     WHERE user_id = #{user_id}
				                    )
				AND STATUS = '일반회원'
	</select>

	<!-- 피드 등록 -->
	<insert id="feedInsert" statementType="CALLABLE" parameterType="co.yedam.finalprj.feed.vo.FeedVO">
		{ CALL fphoto_insert( #{user_id}, #{content}, #{original_name}, #{tags}, #{uuid}, #{file_size}, #{directory}, #{write_lan} )} 
	</insert>
	
	<!-- 피드 삭제 -->
	<delete id="feedDelete" statementType="CALLABLE" parameterType="co.yedam.finalprj.feed.vo.FeedVO">
		{ CALL feed_delete( #{feed_id})} 
	</delete>
	
	<!-- 피드 수정 -->
	<update id="feedUpdate" statementType="CALLABLE" parameterType="co.yedam.finalprj.feed.vo.FeedVO">
		{ CALL feed_update( #{feed_id}, #{content}, #{photo} ,#{tags}, #{original_name}, #{uuid}, #{file_size}, #{directory}, #{write_lan} )} 
	</update>
	
	<!-- 관리자 -->
	<select id="oneSelectFeed" parameterType="co.yedam.finalprj.feed.vo.FeedVO" resultType="co.yedam.finalprj.feed.vo.FeedVO">
		select *
		from feed
		where feed_id = #{feed_id}
	</select>
	
	<select id="pushSelect" parameterType="co.yedam.finalprj.feed.vo.FeedVO" resultType="map">
		      SELECT
						u.USER_ID 	"user_id",
						u.EMAIL 	"email",
						u.NAME 		"name",
						u.PHOTO 	"photo",
						u.STATUS 	"status",
						u.LAT 		"lat",
						u.LON 		"lon",
						u.TIMEZONE 	"time_zone",
						f.FEED_ID 	"feed_id",
						f.CONTENT 	"content",
						f.PHOTO 	"fphoto",
						f.REG_DATE 	"reg_date",
						f.TAGS 		"tags",
						f.WRITE_LAN "write_lan",
						d.ORIGINAL_NAME, 
           				d.UUID 		"uuid",
			            d.DIRECTORY,
			            p.DELETE_YN "delete_yn",
			            nvl(likeCnt.LIKECNT,0) "like_cnt",
			            F_COMMENT_CNT(f.feed_id) "cmt"
			  FROM 		feed f JOIN users u
						ON f.USER_ID = u.USER_ID
	        			left outer join photo p
	        			on  f.PHOTO = p.PHOTO_ID
	        			left outer join photo_detail d
	       				on p.PHOTO_ID=  d.PHOTO_ID
	       				left outer join feedLikeCnt_v likeCnt
               			on f.FEED_ID = likeCnt.FEED_ID
			  WHERE  	f.feed_id= #{feed_id}
	</select>

	             
</mapper>