<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.yedam.finalprj.friends.map.FriendsMap">

	<!-- 팔로잉 -->
	<insert id="follow" parameterType="co.yedam.finalprj.friends.vo.FriendsVO">
		insert into friends(user_id, following) values(#{user_id}, #{following})
	</insert>

	<!-- 언팔로잉 -->
	<insert id="unfollow" parameterType="co.yedam.finalprj.friends.vo.FriendsVO">
		delete from friends where user_id=#{user_id} and following=#{following}
	</insert>

	<!-- 팔로잉여부 체크 -->
	<select id="followCheck" parameterType="co.yedam.finalprj.friends.vo.FriendsVO" resultType="int">
		select count(*) from friends where user_id=#{user_id} and following=#{following}
	</select>

	<!-- 팔로워 카운트 -->
	<select id="followerCnt" parameterType="co.yedam.finalprj.friends.vo.FriendsVO" resultType="int">
		select count(*) from friends where following=#{following}
	</select>

	<!-- 팔로잉 카운트 -->
	<select id="followingCnt" parameterType="co.yedam.finalprj.friends.vo.FriendsVO" resultType="int">
		select count(*) from friends where user_id=#{following}
	</select>
	
		
	<!-- 친구 맵  -->
	<select id="allUser" parameterType="co.yedam.finalprj.users.vo.UsersVO" resultType="co.yedam.finalprj.users.vo.UsersVO">
		select  u.email,
		        u.name,
		        u.birth,
		        u.gender,
		        u.topic,
		        u.LANGUAGE1,
				u.LANGUAGE2,
				u.COUNTRY,
				u.city,
				u.REG_DATE,
				u.PROFILE,
				u.USER_ID,
				u.STATUS,
				u.FLAG,
        		NVL( fv.feedCnt,0) "feedCnt",
		        NVL(fing.FOLLOWINGCNT,0) "followingCnt",
		        NVL(fer.FOLLOWERCNT,0) "followerCnt",
		        topic_cnt(#{topic},topic) "topicCnt" 
		from 	users u LEFT OUTER JOIN feedCnt_v fv
				on u.USER_ID =fv.USER_ID
		   		LEFT OUTER JOIN followingCnt_v fing
		    	on u.user_id = fing.USER_ID
		    	LEFT OUTER JOIN followerCnt_v fer
		    	on u.USER_ID = fer.FOLLOWING
		where
				STATUS = '일반회원'
				AND NOT   u.user_id IN (#{user_id})
				AND NOT   u.USER_ID IN (  SELECT BLOCKED
							              FROM block
								    	  WHERE USER_ID = #{user_id}
				                    )
	</select>
	<select id="newUser" parameterType="co.yedam.finalprj.users.vo.UsersVO" resultType="co.yedam.finalprj.users.vo.UsersVO">
	   select   u.email,
		        u.name,
		        u.birth,
		        u.gender,
		        u.topic,
		        u.LANGUAGE1,
				u.LANGUAGE2,
				u.COUNTRY,
				u.city,
				u.REG_DATE,
				u.PROFILE,
				u.USER_ID,
				u.STATUS,
				u.FLAG,
        		NVL( fv.feedCnt,0) "feedCnt",
		        NVL(fing.FOLLOWINGCNT,0) "followingCnt",
		        NVL(fer.FOLLOWERCNT,0) "followerCnt"
		from 	users u LEFT OUTER JOIN feedCnt_v fv
				on u.USER_ID =fv.USER_ID
		   		LEFT OUTER JOIN followingCnt_v fing
		    	on u.user_id = fing.USER_ID
		    	LEFT OUTER JOIN followerCnt_v fer
		    	on u.USER_ID = fer.FOLLOWING
		where
				STATUS = '일반회원'
				AND NOT u.user_id IN (#{user_id})
				AND NOT u.USER_ID IN (   SELECT BLOCKED
							             FROM block
								    	 WHERE USER_ID = #{user_id}
				                    )
				AND NOT u.USER_ID IN (   SELECT following
							        	 FROM friends
								    	 WHERE USER_ID = #{user_id}
				                      	)         
				AND  u.REG_DATE BETWEEN TRUNC(SYSDATE , 'iw') AND TRUNC(SYSDATE, 'iw')+6          
	</select>
       
	<!-- 나이, 성별, 국가, 언어, 관심사 -->
  	<select id="searchFriend" parameterType="co.yedam.finalprj.users.vo.UsersVO" resultType="co.yedam.finalprj.users.vo.UsersVO">
		SELECT *
		FROM (
				SELECT  
						u.email,
						u.name,
						u.birth,
						u.gender,
						u.topic,
						u.LANGUAGE1 "LANGUAGE1",
						u.LANGUAGE2,
						u.COUNTRY,
						u.city,
						u.REG_DATE,
						u.PROFILE,
						u.USER_ID,
						u.STATUS,
						u.FLAG,
						a.age as cnt,
		        		NVL(fv.feedCnt,0) as feedCnt,
				        NVL(fing.FOLLOWINGCNT,0) as followingCnt,
				        NVL(fer.FOLLOWERCNT,0) as followerCnt,
				        TOPIC_CNT(#{topic},topic) as topicCnt,
				        TOPIC_CNT(#{dtopic},topic) as dtopicCnt,
				        COUNTRY_CNT(upper(#{country}),upper(u.COUNTRY)) as countryCnt,
				        COUNTRY_CNT(upper(#{dcountry}),upper(u.COUNTRY)) as dcountryCnt
				FROM 	
						users u join age_v a
						on u.USER_ID = a.USER_ID
					    LEFT OUTER JOIN feedCnt_v fv
						on u.USER_ID = fv.USER_ID
					    LEFT OUTER JOIN followingCnt_v fing
					    on u.user_id = fing.USER_ID
					    LEFT OUTER JOIN followerCnt_v fer
					    on u.USER_ID = fer.FOLLOWING
				WHERE	
						NOT u.user_id IN (#{user_id})
					    AND NOT u.USER_ID IN (  SELECT BLOCKED
					                            FROM   block
					                            WHERE  USER_ID = #{user_id}
							                 )
						AND NOT u.USER_ID IN (  SELECT following
					                            FROM   friends
					                            WHERE  USER_ID = #{user_id}
							                  )
					  )
			WHERE status = '일반회원'
		<if test="s_age != null">
			AND cnt between #{s_age} and #{e_age} 
		</if>
		<if test="s_dage != null">
			AND cnt NOT between #{s_dage} and #{e_dage} 
		</if>
 		<if test="gender != null">
			AND gender = #{gender}
		</if>
		 <if test="dgender != null">
			AND NOT gender IN #{dgender}
		</if>
		<if test="country != null">
			AND countryCnt >= 1
		</if>
		<if test="dcountry != null">
			AND dcountryCnt = 0
		</if>
		<if test="language1 != null">
			AND upper(LANGUAGE1) = upper(#{language1})
		</if>
		 <if test="topic != null">
			AND topicCnt >= 1
		</if> 
  		<if test="dtopic != null">
			AND dtopicCnt = 0
		</if>
	</select>  
</mapper>